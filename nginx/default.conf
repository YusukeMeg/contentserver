upstream openio {
    server 192.168.4.32:6007;
    server 192.168.4.33:6007;
    server 192.168.4.34:6007;
}

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;

    #access_log  logs/host.access.log  main;
    location /api/video {
        proxy_pass http://aps:3000/video;
    }
    location /api/list {
        proxy_pass http://aps:3000/meta;
    }
    location /api/add {
        proxy_pass http://aps:3000/video/upsert;
    }
    location /api/delete {
        proxy_pass http://aps:3000/video/delete;
    }
    location / {
        autoindex on;
        root   /var/www/html;
        index  index.html index.htm;
    }


    

    location ~* /s3redirect/(.*)$ {
        internal;

        # proxy先ホスト名を解決するためにDNSサーバを指定
        resolver ns-356.awsdns-44.com ns-921.awsdns-51.net ns-1187.awsdns-20.org ns-1573.awsdns-04.co.uk;

        set $s3_access_path  $1;
        set $s3_auth_header  $upstream_http_x_s3auth_header;
        set $s3_date_header  $upstream_http_x_s3date_header;
        set $s3_access_file  $upstream_http_x_s3file_name;

        set $download_url http://openio/$s3_access_path?$args;

        ## set request header
        proxy_http_version 1.1;
        proxy_set_header Date $s3_date_header;
        proxy_set_header Authorization $s3_auth_header;

        ## set response header
        proxy_hide_header Content-Disposition;
        add_header Content-Disposition 'attachment; filename="$s3_access_file"';

        # Do not touch local disks when proxying
        # content to clients
        proxy_max_temp_file_size 0;

        # Download the file and send it to client
        proxy_pass $download_url;
    }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

}
